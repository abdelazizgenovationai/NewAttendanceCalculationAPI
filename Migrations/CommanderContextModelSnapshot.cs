// <auto-generated />
using System;
using NewAttendanceCalculationAPI.EntityFramework;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace NewAttendanceCalculationAPI.Migrations
{
    [DbContext(typeof(HRSystemServiceContext))]
    partial class CommanderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AttendanceCalculationAPI.Models.BiometricEvent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Access_allowed")
                        .HasColumnType("int");

                    b.Property<int>("DoorControllerId")
                        .HasColumnType("int");

                    b.Property<string>("EDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ETime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EntryExitType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BiometricEvents");
                });

            modelBuilder.Entity("AttendanceCalculationAPI.Services.AttendanceServices.Dto.AttendanceLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AbsenceFlag")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("AllowedBreakTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("AnnualLeaveDuration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("AuthorizedUnpaidLeaveDuration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("BreakLeaveDuration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("BusinessLeaveDuration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("CompassionateLeaveDuration")
                        .HasColumnType("time");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FirstPunch")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("HajjLeaveDuration")
                        .HasColumnType("time");

                    b.Property<DateTime>("LastPunch")
                        .HasColumnType("datetime2");

                    b.Property<bool>("LateFlag")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("MaternityLeaveDuration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("MeetingDuration")
                        .HasColumnType("time");

                    b.Property<bool>("MissingPunchOutFlag")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("OverBreakTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("PunchInDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PunchInDateTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("PunchInTime")
                        .HasColumnType("time");

                    b.Property<DateTime>("PunchOutDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PunchOutDateTime")
                        .HasColumnType("datetime2");

                    b.Property<TimeSpan>("PunchOutTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftDurationTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftEndTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("ShiftStartTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("SickLeaveDuration")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalActualWorkingTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalBreakTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalEarlyTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalLateTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalOverTime")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalSpentTimeInEntertainmentRoom")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("TotalSpentTimeOutSideCompanyDuringWorkingHours")
                        .HasColumnType("time");

                    b.Property<TimeSpan>("UnauthorizedUnpaidLeaveDuration")
                        .HasColumnType("time");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AttendanceLogs");
                });
#pragma warning restore 612, 618
        }
    }
}
